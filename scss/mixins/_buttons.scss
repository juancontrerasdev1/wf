//
// Buttons
//

@mixin button-shadow-variant($color, $btn-color, $size-front, $size-mid, $size-back, $opacity-front, $opacity-mid, $opacity-back, $shadow-color-focus) {
  color: $btn-color;
  background-color: $color;

  @if $enable-shadows-theming {
    box-shadow: #{$size-front} rgba($color, $opacity-front), #{$size-mid} rgba($black, $opacity-mid), #{$size-back} rgba($black, $opacity-back);
  } @else {
    box-shadow: none;
  }

  &:hover,
  &:focus,
  &.focus {
    color: $btn-color;
    background-color: lighten($color, 7.5%);
    border-color: lighten($color, 7.5%);

    @if $enable-shadows-theming {
      box-shadow: $shadow-size-focus rgba($shadow-color-focus, $shadow-opacity-focus);
    } @else {
      box-shadow: none;
    }
  }

  &.disabled,
  &:disabled {
    color: $btn-color;
    background-color: $color;
    border-color: $color;

    @if $enable-shadows-theming {
      box-shadow: $shadow-size-focus rgba($shadow-color-focus, $shadow-opacity-focus);
    } @else {
      box-shadow: none;
    }
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {

    &,
    &:focus {
      color: $btn-color;
      background-color: $color;
      border-color: transparent;

      @if $enable-shadows-theming {
        box-shadow: $shadow-size-focus rgba($shadow-color-focus, $shadow-opacity-focus);
      } @else {
        box-shadow: none;
      }
    }
  }
}

@mixin button-outline-variant($color, $color-hover, $shadow-color-focus, $active-background: $color, $active-border: $color) {
  color: $color;
  background-color: transparent;
  background-image: none;
  border-color: $color;
  box-shadow: none;

  &:hover,
  &:focus,
  &.focus {
    color: $color-hover;
    background-color: $active-background;
    border-color: $active-border;

    @if $enable-shadows-theming {
      box-shadow: $shadow-size-focus rgba($shadow-color-focus, $shadow-opacity-focus);
    } @else {
      box-shadow: none;
    }
  }

  &.disabled,
  &:disabled {
    color: $color;
    background-color: transparent;
    border-color: $color;
    box-shadow: none;
  }

  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {

    &,
    &:focus {
      color: $color-hover;
      background-color: $active-background;
      border-color: $active-border;

      @if $enable-shadows-theming {
        box-shadow: $shadow-size-focus rgba($shadow-color-focus, $shadow-opacity-focus);
      } @else {
        box-shadow: none;
      }
    }
  }
}

@mixin button-gray-shadow {
  %btn-gray-shadow {
    @if $enable-shadows-theming {
      box-shadow: $shadow-size-front rgba($black, $shadow-opacity-front), $shadow-size-mid rgba($black, $shadow-opacity-mid), $shadow-size-back rgba($black, $shadow-opacity-back);
    } @else {
      box-shadow: none;
    }
  }
  %btn-light-gray-shadow {
    @if $enable-shadows-theming {
      box-shadow: $shadow-size-front rgba($black, ( $shadow-opacity-front - .1 )), $shadow-size-mid rgba($black, $shadow-opacity-mid), $shadow-size-back rgba($black, ( $shadow-opacity-back - .07 ));
    } @else {
      box-shadow: none;
    }
  }
  %btn-gray-shadow-hover {
    @if $enable-shadows-theming {
      box-shadow: $shadow-size-focus rgba($black, ( $shadow-opacity-focus - .1 ));
    } @else {
      box-shadow: none;
    }
  }
  %btn-light-gray-shadow-hover {
    @if $enable-shadows-theming {
      box-shadow: $shadow-size-focus-light rgba($black, ( $shadow-opacity-focus - .2 ));
    } @else {
      box-shadow: none;
    }
  }
  @each $color, $value in $theme-colors {
    .btn-#{$color} {
      &.btn-gray-shadow {

        @if ($color == "light") {
          @extend %btn-light-gray-shadow;
        } @else {
          @extend %btn-gray-shadow;
        }

        &:hover,
        &:focus,
        &.focus,
        &.disabled,
        &:disabled {

          @if ($color == "light") {
            @extend %btn-light-gray-shadow-hover;
          } @else {
            @extend %btn-gray-shadow-hover;
          }
        }

        &:not(:disabled):not(.disabled):active,
        &:not(:disabled):not(.disabled).active,
        .show > &.dropdown-toggle {

          &:focus {

            @if ($color == "light") {
              @extend %btn-light-gray-shadow-hover;
            } @else {
              @extend %btn-gray-shadow-hover;
            }
          }
        }
      }
    }
  }
  @each $color, $value in $theme-colors {
    .btn-outline-#{$color} {
      &.btn-gray-shadow {
        &:hover,
        &:focus,
        &.focus {

          @if ($color == "light") {
            @extend %btn-light-gray-shadow-hover;
          } @else {
            @extend %btn-gray-shadow-hover;
          }
        }

        &:not(:disabled):not(.disabled):active,
        &:not(:disabled):not(.disabled).active,
        .show > &.dropdown-toggle {

          &,
          &:focus {

            @if ($color == "light") {
              @extend %btn-light-gray-shadow-hover;
            } @else {
              @extend %btn-gray-shadow-hover;
            }
          }
        }
      }
    }
  }
  @each $color, $value in $theme-colors {
    .btn-group-#{$color} {
      &.btn-gray-shadow {

        @if ($color == "light") {
          @extend %btn-light-gray-shadow;
        } @else {
          @extend %btn-gray-shadow;
        }
      }
    }
  }
}

@mixin btn-link {

  &,
  &:hover,
  &:focus,
  &.focus,
  &:not(:disabled):not(.disabled):active,
  &:not(:disabled):not(.disabled).active,
  .show > &.dropdown-toggle {
    color: $main-color;
    background-color: transparent;
    border-color: transparent;
    box-shadow: none;
  }
}

@mixin button-size($padding-y, $padding-x, $font-size, $line-height, $border-radius) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
  line-height: $line-height;

  @if $enable-rounded-button {
    border-radius: $border-radius;
  } @else {
    border-radius: 0;
  }
}

@mixin button-group-variant($color, $size-front, $size-mid, $size-back, $opacity-front, $opacity-mid, $opacity-back) {
  @if $enable-shadows-theming {
    box-shadow: #{$size-front} rgba($color, $opacity-front), #{$size-mid} rgba($black, $opacity-mid), #{$size-back} rgba($black, $opacity-back);
  } @else {
    box-shadow: none;
  }
}

@mixin btn-shadow-none {
  box-shadow: none;
}
